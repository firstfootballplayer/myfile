在接收中断设置数据已接收标志和接收字节数，在上位机通讯线程接收解析上位机指令，

接收电波传感器测试命令，测量有3个步骤，1.开启传感器，检查光电传感器后控制舵机旋转180度（delay后释放力矩），到位后
控制直流电机将传感器伸出，一直检查行程开关判断是否到位（所有的开关量状态都在定时器里检测）完成后向上位机返回信息等待下一步指令。
2.开始测量，和电波传感器通过modbus协议通讯，传感器返回数据较大（1k左右）采用dma+串口空闲中断，每个采集周期完成后向上位机返回数据，共10个周期
3，采集完成，倒着走第一步传感器本体返回初始位置（每个步骤和传感器数据采集都有超时机制，在定时器里计数）

编写IAP(Bootloader)，将应用程序更新到STM32flash并运行
移植FreeRTOS进行应用程序的同步互斥及内存管理（减少cpu运行降低功耗）
使用MODBUS协议并通过DMA+串口空闲中断与电波传感器进行通讯
利用循环队列缓存上位机指令避免指令过快导致丢失
通过IO模拟i2c时序与sht10温湿度传感器通讯采集温湿度值
通过spi控制oled显示温湿度，电量等外设信息


考虑性能减少耗电量。

串口打印和程序里的不一样，程序里晶振不对，写了8m实际12m，程序感觉慢了几倍延时，外部晶振没有工作，改成了内部晶振导致变慢了
jlink和笔记本电源插同时上后容易产生共地干扰导致串口发送数据出错。

在更新过程中发现上位机的进度条有时卡住更新失败，调试程序通过串口监听工具查看数据传输情况，发现卡主的时候没有数据传输了，在卡主前
的两帧数据是重复的，确认程序有没有跑飞在程序的定时器中断里一直打印信息，发现在卡主的时候没有信息了，怀疑程序跑飞，在硬件中断函数打印
信息，在卡主时能看到输出，确认是程序跑飞了，通过示波器查看串口传输情况，发现在卡主前的两帧数据粘在了一起而且和前一帧数据间隔时间较长
打印串口接收中断中接收字节长度，发现卡主时的那帧很长将这帧放入到数组会导致数组越界，因为串口采用空闲中断判断一帧数据。

ymodel协议一次传输1k，采用请求响应方式，我的程序里发送请求数据指令，等待150ms，检查包序号是否正确，如果成功接收则会更新包序接着
请求下一包数据如果失败则发送重复请求指令，后来发现是工控机串口输出线会有阻塞的情况（已经发送出去但是阻塞了导致单片机没有及时收到）
单片机在150ms等待后检查发现没有收到则发送重复请求指令，工控机输入线应该没问题接收到后又发送了这包数据，这时工控机的输出不在阻塞将
上一包和这包数据一起发送到了单片机中，单片机同时接收到了两包粘在一起的数据认为是同一包放入到数组中导致数组越界程序跑飞
解决办法是延长发送请求指令后的等待时间确保收到一包数据后再请求下一包